plugins {
    id "com.android.application"
    id "kotlin-android"
    id "dev.flutter.flutter-gradle-plugin"
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

android {
    compileSdk flutter.compileSdkVersion
    ndkVersion flutter.ndkVersion

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    kotlinOptions {
        jvmTarget = '17'
    }
    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }
    defaultConfig {
        applicationId "app.rvx.manager.flutter"
        minSdk 26
        targetSdk 34
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
    }
    buildTypes {
        release {
            ndk {
                abiFilters 'armeabi-v7a'
            }
            if (System.getenv("signingKey") != null) {
                signingConfigs {
                    create("release") {
                        storeFile = file(System.getenv("signingKey"))
                        storePassword = System.getenv("keyStorePassword")
                        keyAlias = System.getenv("keyAlias")
                        keyPassword = System.getenv("keyPassword")
                    }
                }
                signingConfig = signingConfigs.release
                resValue "string", "app_name", "RVX Manager"
                applicationVariants.all { variant ->
                    variant.outputs.all {
                        outputFileName = "revanced-manager-v${flutterVersionName}.apk"
                    }
                }
            } else {
                signingConfig = signingConfigs.debug
                resValue "string", "app_name", "RVX Manager Debug"
                applicationIdSuffix ".debug"
            }
        }
        debug {
            shrinkResources false
            minifyEnabled false
            resValue "string", "app_name", "RVX Manager Debug"
            applicationIdSuffix ".debug"
            signingConfig signingConfigs.debug
            ndk {
                abiFilters 'armeabi-v7a'
            }
        }
        profile {
            shrinkResources false
            minifyEnabled false
            resValue "string", "app_name", "RVX Manager Profile"
            applicationIdSuffix ".profile"
            signingConfig signingConfigs.debug
            ndk {
                abiFilters 'armeabi-v7a'
            }
        }
    }
    packagingOptions {
        jniLibs {
            useLegacyPackaging true
            excludes += ['/prebuilt/**']
        }
        resources {
            excludes += ['/prebuilt/**']
        }
    }

    namespace 'app.armv7test.manager.flutter'
}

kotlin {
    jvmToolchain(17)
}

flutter {
    source '../..'
}

dependencies {
    implementation("app.revanced:revanced-patcher:19.3.1")
    implementation("io.github.inotia00:revanced-library:2.3.0-SNAPSHOT")
    // implementation("app.revanced:revanced-library:2.3.0")
}
